name: Load Test Auto Scaling

on:
  workflow_dispatch:
    inputs:
      test_duration:
        description: 'Test duration'
        required: true
        default: '8'
        type: choice
        options:
        - '5'
        - '8'
        - '12'
        - '15'

jobs:
  load-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Install only what generator.py needs
          pip install requests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Get current Load Balancer URL from Terraform
        id: get-clb
        run: |
          cd terraform
          terraform init -input=false
          CLB_URL=$(terraform output -raw clb_dns_name)
          if [ -z "$CLB_URL" ]; then
            echo "❌ ERROR: Could not get CLB URL from Terraform"
            exit 1
          fi
          echo "clb_url=$CLB_URL" >> $GITHUB_OUTPUT
          echo "✅ Load Balancer URL: $CLB_URL"

      - name: Check current Auto Scaling state
        run: |
          echo "=== Before Test ==="
          aws autoscaling describe-auto-scaling-groups \
            --auto-scaling-group-names hellomvc-asg \
            --region ap-south-1 \
            --query 'AutoScalingGroups[0].{Desired:DesiredCapacity, Instances:Instances[*].InstanceId}' \
            --output table

      - name: Run Load Test using generator.py
        run: |
          echo "=== Starting Load Test ==="
          echo "Using: terraform/scripts/generator.py"
          echo "Target: ${{ steps.get-clb.outputs.clb_url }}"
          echo "Duration: ${{ github.event.inputs.test_duration }} minutes"
          
          # Use your actual generator.py script
          python terraform/scripts/generator.py "${{ steps.get-clb.outputs.clb_url }}" "${{ github.event.inputs.test_duration }}"

      - name: Monitor scaling results
        run: |
          echo "Waiting 2 minutes for scaling..."
          sleep 120
          
          echo "=== Scaling Activities ==="
          aws autoscaling describe-scaling-activities \
            --auto-scaling-group-name hellomvc-asg \
            --region ap-south-1 \
            --query 'Activities[0:5].{Time:StartTime, Activity:Description, Status:StatusCode}' \
            --output table || echo "No recent scaling activities"

      - name: Final state check
        run: |
          echo "=== After Test ==="
          aws autoscaling describe-auto-scaling-groups \
            --auto-scaling-group-names hellomvc-asg \
            --region ap-south-1 \
            --query 'AutoScalingGroups[0].{Desired:DesiredCapacity, Instances:Instances[*].InstanceId}' \
            --output table

      - name: Generate report
        run: |
          echo "=== Load Test Complete ==="
          echo "📊 Check CloudWatch: https://ap-south-1.console.aws.amazon.com/cloudwatch/home?region=ap-south-1#dashboards:name=hellomvc-dev-dashboard"

name: Build & Deploy

on:
  push:
    branches:
      - pr-task
    paths:
      - 'app/**'
      - 'terraform/**'
      - 'scripts/**'
  workflow_dispatch: # enables manual runs

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      JAR_NAME: hellomvc-0.0.1-SNAPSHOT.jar
      TF_WORKDIR: ./terraform

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 3️⃣ Upload latest JAR to S3
      - name: Upload JAR to S3
        run: |
          aws s3 cp ./app/${JAR_NAME} s3://balteen121/${JAR_NAME} --acl bucket-owner-full-control
          echo "Uploaded ${JAR_NAME} to S3 bucket balteen121"

      # 4️⃣ Install Terraform
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.7

      # 5️⃣ Terraform Init
      - name: Terraform Init
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform init -backend-config="bucket=balteen121-tfstate" \
                           -backend-config="key=terraform.tfstate" \
                           -backend-config="region=${{ env.AWS_REGION }}" \
                           -backend-config="dynamodb_table=terraform-locks"

      # 6️⃣ Terraform Plan
      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform plan -out=tfplan

      # 7️⃣ Terraform Apply
      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform apply -auto-approve tfplan

      # 8️⃣ Confirm deployment
      - name: Output
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform output
      ###################
